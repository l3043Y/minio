version: '3.7'

# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: quay.io/minio/minio
  command: server /data{1...4} --console-address ":9001"
  restart: always
  network_mode: host
  expose:
    - "9000"
    - "9001"
  environment:
    - MINIO_KMS_KES_ENDPOINT=https://127.0.0.1:7373
    - MINIO_KMS_KES_CERT_FILE=/opt/kes/kes-fs/app.cert
    - MINIO_KMS_KES_KEY_FILE=/opt/kes/kes-fs/app.key
    - MINIO_KMS_KES_CAPATH=/opt/kes/server.crt
    - MINIO_KMS_KES_KEY_NAME=app-key
    # MINIO_ROOT_USER: minio
    # MINIO_ROOT_PASSWORD: minio123
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3

# starts 4 docker containers running minio server instances.
# using nginx reverse proxy, load balancing, you can access
# it through port 9000.
services:
  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - ./kes:/opt/kes
      - /mnt/data1:/data1
      - /mnt/data2:/data2
      - /mnt/data3:/data3
      - /mnt/data4:/data4
  
  kes:
    image: minio/kes
    network_mode: host
    restart: always
    command: server --config /opt/kes/kes-fs/config.yml --auth off
    environment:
      - APP_IDENTITY=257f278afe6810bf3928cd3c5e37d33be21cc7244bcdf974eb273ba45ccb6615
      - KES_CLIENT_KEY=/opt/kes/kes-fs/app.key
      - KES_CLIENT_CERT=/opt/kes/kes-fs/app.cert
    volumes:
      - ./kes:/opt/kes